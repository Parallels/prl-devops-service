apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  namespace: {{ include "helm.namespace" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        timestamp: {{ now | quote }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.storage.databasePath }}
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: {{ include "helm.fullname" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: API_PORT
              value: {{ .Values.service.targetPort | quote }}
            {{- if .Values.apiPrefix }}
            - name: API_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: API_PREFIX
            {{- end }}
            {{- if .Values.logLevel }}
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: LOG_LEVEL
            {{- end }}
            {{- if .Values.security.key }}
            - name: ENCRYPTION_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: ENCRYPTION_PRIVATE_KEY
            {{- end }}
            {{- if .Values.security.jwt.hmac_secret }}
            - name: JWT_HMACS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: JWT_HMACS_SECRET
            {{- end }}
            {{- if .Values.security.jwt.rsa_private_key }}
            - name: JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: JWT_PRIVATE_KEY
            {{- end }}
            {{- if .Values.security.jwt.duration }}
            - name: JWT_DURATION
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: JWT_DURATION
            {{- end }}
            {{- if .Values.security.jwt.signing_method }}
            - name: JWT_SIGN_ALGORITHM
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: JWT_SIGN_ALGORITHM
            {{- end }}
            {{- if .Values.security.password.min_password_length }}
            - name: SECURITY_PASSWORD_MIN_PASSWORD_LENGTH
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_MIN_PASSWORD_LENGTH
            {{- end }}
            {{- if .Values.security.password.max_password_length }}
            - name: SECURITY_PASSWORD_MAX_PASSWORD_LENGTH
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_MAX_PASSWORD_LENGTH
            {{- end }}
            {{- if .Values.security.password.require_lowercase }}
            - name: SECURITY_PASSWORD_REQUIRE_LOWERCASE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_REQUIRE_LOWERCASE
            {{- end }}
            {{- if .Values.security.password.require_uppercase }}
            - name: SECURITY_PASSWORD_REQUIRE_UPPERCASE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_REQUIRE_UPPERCASE
            {{- end }}
            {{- if .Values.security.password.require_number }}
            - name: SECURITY_PASSWORD_REQUIRE_NUMBER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_REQUIRE_NUMBER
            {{- end }}
            {{- if .Values.security.password.require_special_characters }}
            - name: SECURITY_PASSWORD_REQUIRE_SPECIAL_CHAR
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_REQUIRE_SPECIAL_CHAR
            {{- end }}
            {{- if .Values.security.password.salt_password }}
            - name: SECURITY_PASSWORD_SALT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_PASSWORD_SALT_PASSWORD
            {{- end }}
            {{- if .Values.security.brute_force.max_login_attempts }}
            - name: BRUTE_FORCE_MAX_LOGIN_ATTEMPTS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: BRUTE_FORCE_MAX_LOGIN_ATTEMPTS
            {{- end }}
            {{- if .Values.security.brute_force.lockout_duration }}
            - name: BRUTE_FORCE_LOCKOUT_DURATION
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: BRUTE_FORCE_LOCKOUT_DURATION
            {{- end }}
            {{- if .Values.security.brute_force.increment_lockout_duration }}
            - name: BRUTE_FORCE_INCREMENTAL_WAIT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: BRUTE_FORCE_INCREMENTAL_WAIT
            {{- end }}
            {{- if .Values.security.root_password }}
            - name: ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: SECURITY_ROOT_PASSWORD
            {{- end }}
            {{- if .Values.security.enable_tls }}
            - name: TLS_ENABLED
              value: "true"
            - name: TLS_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: TLS_CERTIFICATE
            - name: TLS_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: TLS_PRIVATE_KEY
            {{- end }}
            {{- if .Values.config.disableCatalogCaching }}
            - name: DISABLE_CATALOG_CACHING
              value: "true"
            {{- end }}
            {{- if .Values.config.mode }}
            - name: MODE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: MODE
            {{- end }}
            {{- if .Values.storage.databasePath }}
            - name: DATABASE_FOLDER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "helm.fullname" . }}
                  key: DATABASE_FOLDER
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              {{- if .Values.ingress.apiPrefix }}
              path: {{ .Values.ingress.apiPrefix }}/health/probe
              {{- else }}
              path: /health/probe
              {{- end }}
              port: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet:
              {{- if .Values.ingress.apiPrefix }}
              path: {{ .Values.ingress.apiPrefix }}/health/probe
              {{- else }}
              path: /health/probe
              {{- end }}
              port: {{ .Values.service.targetPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.storage.databasePath }}
          volumeMounts:
            - mountPath: {{ .Values.storage.databasePath }}
              name: db-storage
          {{- end }}
      {{- if .Values.node_name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
