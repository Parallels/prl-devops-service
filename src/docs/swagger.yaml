basePath: /api
definitions:
  github_com_Parallels_prl-devops-service_catalog_models.MinimumSpecRequirement:
    properties:
      cpu:
        type: integer
      disk:
        type: integer
      memory:
        type: integer
    type: object
  github_com_Parallels_prl-devops-service_models.Advanced:
    properties:
      Public SSH keys synchronization:
        type: string
      Rosetta Linux:
        type: string
      Share host location:
        type: string
      Show developer tools:
        type: string
      Swipe from edges:
        type: string
      VM hostname synchronization:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.CPU:
    properties:
      VT-x:
        type: boolean
      accl:
        type: string
      auto:
        type: string
      cpus:
        type: integer
      hotplug:
        type: boolean
      mode:
        type: string
      type:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.CatalogManifest:
    properties:
      architecture:
        type: string
      catalog_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      download_count:
        type: integer
      id:
        type: string
      is_compressed:
        type: boolean
      last_downloaded_at:
        type: string
      last_downloaded_user:
        type: string
      metadata_filename:
        type: string
      minimum_requirements:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.MinimumSpecRequirement'
      name:
        type: string
      pack_contents:
        items:
          $ref: '#/definitions/models.CatalogManifestPackItem'
        type: array
      pack_filename:
        type: string
      pack_relative_path:
        type: string
      pack_size:
        type: integer
      path:
        type: string
      provider:
        $ref: '#/definitions/models.RemoteVirtualMachineProvider'
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      revoked:
        type: boolean
      revoked_at:
        type: string
      revoked_by:
        type: string
      size:
        type: string
      tags:
        items:
          type: string
        type: array
      tainted:
        type: boolean
      tainted_at:
        type: string
      tainted_by:
        type: string
      type:
        type: string
      untainted_by:
        type: string
      updated_at:
        type: string
      version:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Cdrom0:
    properties:
      enabled:
        type: boolean
      image:
        type: string
      port:
        type: string
      state:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Coherence:
    properties:
      Auto-switch to full screen:
        type: string
      Disable aero:
        type: string
      Hide minimized windows:
        type: string
      Show Windows systray in Mac menu:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Expiration:
    properties:
      enabled:
        type: boolean
    type: object
  github_com_Parallels_prl-devops-service_models.Fullscreen:
    properties:
      Activate spaces on click:
        type: string
      Gamma control:
        type: string
      Optimize for games:
        type: string
      Scale view mode:
        type: string
      Use all displays:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.GuestSharedFolders:
    properties:
      Automount:
        type: string
      enabled:
        type: boolean
    type: object
  github_com_Parallels_prl-devops-service_models.GuestTools:
    properties:
      state:
        type: string
      version:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Hardware:
    properties:
      cdrom0:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Cdrom0'
      cpu:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CPU'
      hdd0:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Hdd0'
      memory:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Memory'
      memory_quota:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.MemoryQuota'
      net0:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Net0'
      sound0:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Sound0'
      usb:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Expiration'
      video:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Video'
    type: object
  github_com_Parallels_prl-devops-service_models.Hdd0:
    properties:
      enabled:
        type: boolean
      image:
        type: string
      online-compact:
        type: string
      port:
        type: string
      size:
        type: string
      type:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.HostResourceItem:
    properties:
      disk_size:
        type: number
      free_disk_size:
        type: number
      logical_cpu_count:
        type: integer
      memory_size:
        type: number
      physical_cpu_count:
        type: integer
    type: object
  github_com_Parallels_prl-devops-service_models.HostReverseProxy:
    properties:
      enabled:
        type: boolean
      host:
        type: string
      hosts:
        items:
          $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        type: array
      port:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.ImportCatalogManifestResponse:
    properties:
      id:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.ImportVmResponse:
    properties:
      id:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Memory:
    properties:
      auto:
        type: string
      hotplug:
        type: boolean
      size:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.MemoryQuota:
    properties:
      auto:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.MinimumSpecRequirement:
    properties:
      cpu:
        type: integer
      disk:
        type: integer
      memory:
        type: integer
    type: object
  github_com_Parallels_prl-devops-service_models.MiscellaneousSharing:
    properties:
      Shared clipboard:
        type: string
      Shared cloud:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Modality:
    properties:
      Capture mouse clicks:
        type: string
      Opacity (percentage):
        type: integer
      Show on all spaces:
        type: string
      Stay on top:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.MouseAndKeyboard:
    properties:
      Keyboard optimization mode:
        type: string
      Smart mouse optimized for games:
        type: string
      Smooth scrolling:
        type: string
      Sticky mouse:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Net0:
    properties:
      card:
        type: string
      enabled:
        type: boolean
      mac:
        type: string
      type:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Optimization:
    properties:
      Adaptive hypervisor:
        type: string
      Auto compress virtual disks:
        type: string
      Disabled Windows logo:
        type: string
      Faster virtual machine:
        type: string
      Hypervisor type:
        type: string
      Longer battery life:
        type: string
      Nested virtualization:
        type: string
      PMU virtualization:
        type: string
      Resource quota:
        type: string
      Show battery status:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.ParallelsVM:
    properties:
      Advanced:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Advanced'
      Allow select boot device:
        type: string
      BIOS type:
        type: string
      Boot order:
        type: string
      Coherence:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Coherence'
      Description:
        type: string
      EFI Secure boot:
        type: string
      Expiration:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Expiration'
      External boot device:
        type: string
      Fullscreen:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Fullscreen'
      Guest Shared Folders:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.GuestSharedFolders'
      GuestTools:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.GuestTools'
      Hardware:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Hardware'
      Home:
        type: string
      Home path:
        type: string
      Host Shared Folders:
        additionalProperties: true
        type: object
      Host defined sharing:
        type: string
      ID:
        type: string
      Miscellaneous Sharing:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.MiscellaneousSharing'
      Modality:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Modality'
      Mouse and Keyboard:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.MouseAndKeyboard'
      Name:
        type: string
      Network:
        $ref: '#/definitions/models.NetworkInformation'
      OS:
        type: string
      Optimization:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Optimization'
      Print Management:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.PrintManagement'
      Restore Image:
        type: string
      SMBIOS settings:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.SMBIOSSettings'
      Security:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Security'
      Shared Applications:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.SharedApplications'
      Shared Profile:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Expiration'
      Smart Guard:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.Expiration'
      SmartMount:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.SmartMount'
      Startup and Shutdown:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.StartupAndShutdown'
      State:
        type: string
      Template:
        type: string
      Time Synchronization:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.TimeSynchronization'
      Travel mode:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.TravelMode'
      Type:
        type: string
      USB and Bluetooth:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.USBAndBluetooth'
      Uptime:
        type: string
      host:
        type: string
      host_external_ip_address:
        type: string
      host_id:
        type: string
      host_state:
        type: string
      internal_ip_address:
        type: string
      user:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.PrintManagement:
    properties:
      Show host printer UI:
        type: string
      Synchronize default printer:
        type: string
      Synchronize with host printers:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.PullCatalogManifestResponse:
    properties:
      id:
        type: string
      local_path:
        type: string
      machine_id:
        type: string
      machine_name:
        type: string
      manifest:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
    type: object
  github_com_Parallels_prl-devops-service_models.ReverseProxy:
    properties:
      enabled:
        type: boolean
      host:
        type: string
      port:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.ReverseProxyHost:
    properties:
      cors:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostCors'
      host:
        type: string
      http_routes:
        items:
          $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostHttpRoute'
        type: array
      id:
        type: string
      port:
        type: string
      tcp_route:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostTcpRoute'
      tls:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostTls'
    type: object
  github_com_Parallels_prl-devops-service_models.ReverseProxyHostCors:
    properties:
      allowed_headers:
        items:
          type: string
        type: array
      allowed_methods:
        items:
          type: string
        type: array
      allowed_origins:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  github_com_Parallels_prl-devops-service_models.ReverseProxyHostHttpRoute:
    properties:
      id:
        type: string
      path:
        type: string
      pattern:
        type: string
      request_headers:
        additionalProperties:
          type: string
        type: object
      response_headers:
        additionalProperties:
          type: string
        type: object
      schema:
        type: string
      target_host:
        type: string
      target_port:
        type: string
      target_vm_id:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.ReverseProxyHostTcpRoute:
    properties:
      id:
        type: string
      target_host:
        type: string
      target_port:
        type: string
      target_vm_id:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.ReverseProxyHostTls:
    properties:
      cert:
        type: string
      enabled:
        type: boolean
      key:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.SMBIOSSettings:
    properties:
      BIOS Version:
        type: string
      Board Manufacturer:
        type: string
      System serial number:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Security:
    properties:
      Archived:
        type: string
      Configuration is locked:
        type: string
      Custom password protection:
        type: string
      Encrypted:
        type: string
      Packed:
        type: string
      Protected:
        type: string
      TPM enabled:
        type: string
      TPM type:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.SharedApplications:
    properties:
      Bounce dock icon when app flashes:
        type: string
      Guest-to-host apps sharing:
        type: string
      Host-to-guest apps sharing:
        type: string
      Show guest apps folder in Dock:
        type: string
      Show guest notifications:
        type: string
      enabled:
        type: boolean
    type: object
  github_com_Parallels_prl-devops-service_models.SmartMount:
    properties:
      CD/DVD drives:
        type: string
      Network shares:
        type: string
      Removable drives:
        type: string
      enabled:
        type: boolean
    type: object
  github_com_Parallels_prl-devops-service_models.Sound0:
    properties:
      enabled:
        type: boolean
      mixer:
        type: string
      output:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.StartupAndShutdown:
    properties:
      Autostart:
        type: string
      Autostart delay:
        type: integer
      Autostop:
        type: string
      On shutdown:
        type: string
      On window close:
        type: string
      Pause idle:
        type: string
      Startup view:
        type: string
      Undo disks:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.TimeSynchronization:
    properties:
      Interval (in seconds):
        type: integer
      Smart mode:
        type: string
      Timezone synchronization disabled:
        type: string
      enabled:
        type: boolean
    type: object
  github_com_Parallels_prl-devops-service_models.TravelMode:
    properties:
      Enter condition:
        type: string
      Enter threshold:
        type: integer
      Quit condition:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.USBAndBluetooth:
    properties:
      Automatic sharing bluetooth:
        type: string
      Automatic sharing cameras:
        type: string
      Automatic sharing gamepads:
        type: string
      Automatic sharing smart cards:
        type: string
      Support USB 3.0:
        type: string
    type: object
  github_com_Parallels_prl-devops-service_models.Video:
    properties:
      3d-acceleration:
        type: string
      adapter-type:
        type: string
      automatic-video-memory:
        type: string
      high-resolution:
        type: string
      high-resolution-in-guest:
        type: string
      native-scaling-in-guest:
        type: string
      size:
        type: string
      vertical-sync:
        type: string
    type: object
  models.ApiCommonResponse:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      operation:
        type: string
      success:
        type: boolean
    type: object
  models.ApiErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.ApiKeyRequest:
    properties:
      created_at:
        type: string
      key:
        type: string
      name:
        type: string
      revoked:
        type: boolean
      revoked_at:
        type: string
      secret:
        type: string
      updated_at:
        type: string
    type: object
  models.ApiKeyResponse:
    properties:
      encoded:
        type: string
      id:
        type: string
      key:
        type: string
      name:
        type: string
      revoked:
        type: boolean
    type: object
  models.ApiUser:
    properties:
      claims:
        items:
          type: string
        type: array
      email:
        type: string
      id:
        type: string
      isSuperUser:
        type: boolean
      name:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.CatalogManifestPackItem:
    properties:
      is_dir:
        type: boolean
      name:
        type: string
      path:
        type: string
    type: object
  models.ClaimRequest:
    properties:
      name:
        type: string
    type: object
  models.ClaimResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.CreateCatalogVirtualMachineRequest:
    properties:
      architecture:
        type: string
      catalog_id:
        type: string
      connection:
        type: string
      machine_name:
        type: string
      owner:
        type: string
      path:
        type: string
      provider_metadata:
        additionalProperties:
          type: string
        type: object
      specs:
        $ref: '#/definitions/models.CreateVirtualMachineSpecs'
      start_after_pull:
        type: boolean
      version:
        type: string
    type: object
  models.CreatePackerTemplateRequest:
    properties:
      addons:
        items:
          type: string
        type: array
      created_at:
        type: string
      defaults:
        additionalProperties:
          type: string
        type: object
      description:
        type: string
      id:
        type: string
      internal:
        type: boolean
      name:
        type: string
      packer_folder:
        type: string
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      specs:
        additionalProperties:
          type: string
        type: object
      updated_at:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  models.CreatePackerVirtualMachineRequest:
    properties:
      architecture:
        type: string
      desiredState:
        type: string
      name:
        type: string
      owner:
        type: string
      specs:
        $ref: '#/definitions/models.CreateVirtualMachineSpecs'
      template:
        type: string
    type: object
  models.CreateVagrantMachineRequest:
    properties:
      architecture:
        type: string
      box:
        type: string
      custom_parallels_config:
        type: string
      custom_vagrant_config:
        type: string
      name:
        type: string
      owner:
        type: string
      specs:
        $ref: '#/definitions/models.CreateVirtualMachineSpecs'
      vagrant_file_path:
        type: string
      version:
        type: string
    type: object
  models.CreateVirtualMachineRequest:
    properties:
      architecture:
        type: string
      catalog_manifest:
        $ref: '#/definitions/models.CreateCatalogVirtualMachineRequest'
      name:
        type: string
      owner:
        type: string
      packer_template:
        $ref: '#/definitions/models.CreatePackerVirtualMachineRequest'
      start_on_create:
        type: boolean
      vagrant_box:
        $ref: '#/definitions/models.CreateVagrantMachineRequest'
    type: object
  models.CreateVirtualMachineResponse:
    properties:
      current_state:
        type: string
      host:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: string
    type: object
  models.CreateVirtualMachineSpecs:
    properties:
      cpu:
        type: string
      disk:
        type: string
      memory:
        type: string
    type: object
  models.HostResourceOverviewResponse:
    properties:
      cpu_brand:
        type: string
      cpu_type:
        type: string
      total:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.HostResourceItem'
      total_available:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.HostResourceItem'
      total_in_use:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.HostResourceItem'
      total_reserved:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.HostResourceItem'
    type: object
  models.ImportCatalogManifestRequest:
    properties:
      architecture:
        type: string
      catalog_id:
        type: string
      connection:
        type: string
      provider_metadata:
        additionalProperties:
          type: string
        type: object
      version:
        type: string
    type: object
  models.ImportVmRequest:
    properties:
      architecture:
        type: string
      catalog_id:
        type: string
      connection:
        type: string
      description:
        type: string
      force:
        type: boolean
      is_compressed:
        type: boolean
      machine_remote_path:
        type: string
      provider_metadata:
        additionalProperties:
          type: string
        type: object
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      type:
        type: string
      version:
        type: string
    type: object
  models.InstallToolsRequest:
    properties:
      all:
        type: boolean
      run_as:
        type: string
      tools:
        additionalProperties:
          $ref: '#/definitions/models.InstallToolsRequestItem'
        type: object
    type: object
  models.InstallToolsRequestItem:
    properties:
      flags:
        additionalProperties:
          type: string
        type: object
      version:
        type: string
    type: object
  models.InstallToolsResponse:
    properties:
      installed_tools:
        additionalProperties:
          $ref: '#/definitions/models.InstallToolsResponseItem'
        type: object
      success:
        type: boolean
    type: object
  models.InstallToolsResponseItem:
    properties:
      message:
        type: string
      success:
        type: boolean
      version:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      email:
        type: string
      expires_at:
        type: integer
      token:
        type: string
    type: object
  models.NetworkInformation:
    properties:
      Conditioned:
        type: string
      Inbound:
        $ref: '#/definitions/models.NetworkInformationBound'
      Outbound:
        $ref: '#/definitions/models.NetworkInformationBound'
      ipAddresses:
        items:
          $ref: '#/definitions/models.NetworkInformationIPAddress'
        type: array
    type: object
  models.NetworkInformationBound:
    properties:
      Bandwidth:
        type: string
      Delay:
        type: string
      Packet Loss:
        type: string
    type: object
  models.NetworkInformationIPAddress:
    properties:
      ip:
        type: string
      type:
        type: string
    type: object
  models.OAuthErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.OAuthErrorType'
      error_description:
        type: string
      error_uri:
        type: string
    type: object
  models.OAuthErrorType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    type: integer
    x-enum-varnames:
    - OAuthInvalidRequestError
    - OAuthInvalidClientError
    - OAuthInvalidGrant
    - OAuthInvalidScope
    - OAuthUserExists
    - OAuthUnauthorizedClient
    - OAuthUnsupportedGrantType
    - OAuthPasswordMismatch
    - OAuthPasswordValidation
    - OAuthUserValidation
    - OAuthEmailNotVerified
    - OAuthUserBlocked
    - UnknownError
  models.OrchestratorAuthentication:
    properties:
      api_key:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.OrchestratorHostRequest:
    properties:
      authentication:
        $ref: '#/definitions/models.OrchestratorAuthentication'
      description:
        type: string
      host:
        type: string
      port:
        type: string
      prefix:
        type: string
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      schema:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  models.OrchestratorHostResponse:
    properties:
      architecture:
        type: string
      cpu_model:
        type: string
      description:
        type: string
      devops_version:
        type: string
      enabled:
        type: boolean
      external_ip_address:
        type: string
      host:
        type: string
      id:
        type: string
      is_reverse_proxy_enabled:
        type: boolean
      os_name:
        type: string
      os_version:
        type: string
      parallels_desktop_licensed:
        type: boolean
      parallels_desktop_version:
        type: string
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      resources:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.HostResourceItem'
      reverse_proxy:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.HostReverseProxy'
      state:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  models.OrchestratorHostUpdateRequest:
    properties:
      authentication:
        $ref: '#/definitions/models.OrchestratorAuthentication'
      description:
        type: string
      host:
        type: string
      port:
        type: string
      prefix:
        type: string
      schema:
        type: string
    type: object
  models.PackerTemplateResponse:
    properties:
      addons:
        items:
          type: string
        type: array
      created_at:
        type: string
      defaults:
        additionalProperties:
          type: string
        type: object
      description:
        type: string
      id:
        type: string
      internal:
        type: boolean
      name:
        type: string
      packer_folder:
        type: string
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      specs:
        additionalProperties:
          type: string
        type: object
      updated_at:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  models.ParallelsDesktopLicense:
    properties:
      advanced_restrictions:
        type: string
      cpu_total:
        type: integer
      deferred_activation:
        type: string
      edition:
        type: string
      expiration:
        type: string
      grace_period_ends_at:
        type: string
      is_volume:
        type: string
      main_period_ends_at:
        type: string
      max_memory:
        type: integer
      serial:
        type: string
      status:
        type: string
      uuid:
        type: string
    type: object
  models.PullCatalogManifestRequest:
    properties:
      architecture:
        type: string
      catalog_id:
        type: string
      client:
        type: string
      connection:
        type: string
      machine_name:
        type: string
      owner:
        type: string
      path:
        type: string
      provider_metadata:
        additionalProperties:
          type: string
        type: object
      start_after_pull:
        type: boolean
      version:
        type: string
    type: object
  models.PushCatalogManifestRequest:
    properties:
      architecture:
        type: string
      catalog_id:
        type: string
      connection:
        type: string
      description:
        type: string
      local_path:
        type: string
      minimum_requirements:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_catalog_models.MinimumSpecRequirement'
      pack_size:
        type: integer
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      uuid:
        type: string
      version:
        type: string
    type: object
  models.RegisterVirtualMachineRequest:
    properties:
      delay_applying_restrictions:
        type: boolean
      force:
        type: boolean
      machine_name:
        type: string
      owner:
        type: string
      path:
        type: string
      regenerate_source_uuid:
        type: boolean
      uuid:
        type: string
    type: object
  models.RemoteVirtualMachineProvider:
    properties:
      api_key:
        type: string
      host:
        type: string
      meta:
        additionalProperties:
          type: string
        type: object
      password:
        type: string
      port:
        type: string
      type:
        type: string
      user:
        type: string
    type: object
  models.RenameVirtualMachineRequest:
    properties:
      current_name:
        type: string
      description:
        type: string
      id:
        type: string
      new_name:
        type: string
    type: object
  models.ReverseProxyHostCreateRequest:
    properties:
      cors:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostCors'
      host:
        type: string
      http_routes:
        items:
          $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostHttpRoute'
        type: array
      port:
        type: string
      tcp_route:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostTcpRoute'
      tls:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostTls'
    type: object
  models.ReverseProxyHostHttpRouteCreateRequest:
    properties:
      path:
        type: string
      pattern:
        type: string
      request_headers:
        additionalProperties:
          type: string
        type: object
      response_headers:
        additionalProperties:
          type: string
        type: object
      schema:
        type: string
      target_host:
        type: string
      target_port:
        type: string
      target_vm_id:
        type: string
    type: object
  models.ReverseProxyHostTcpRouteCreateRequest:
    properties:
      target_host:
        type: string
      target_port:
        type: string
      target_vm_id:
        type: string
    type: object
  models.ReverseProxyHostUpdateRequest:
    properties:
      cors:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostCors'
      host:
        type: string
      port:
        type: string
      tls:
        $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHostTls'
    type: object
  models.RoleRequest:
    properties:
      name:
        type: string
    type: object
  models.RoleResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.ServiceHealthCheck:
    properties:
      error_message:
        type: string
      healthy:
        type: boolean
      message:
        type: string
      name:
        type: string
    type: object
  models.SystemReverseProxy:
    properties:
      enabled:
        type: boolean
      host:
        type: string
      hosts:
        items:
          $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        type: array
      port:
        type: string
    type: object
  models.SystemUsageItem:
    properties:
      disk_count:
        type: number
      logical_cpu_count:
        type: integer
      memory_size:
        type: number
      physical_cpu_count:
        type: integer
    type: object
  models.SystemUsageResponse:
    properties:
      cpu_brand:
        type: string
      cpu_type:
        type: string
      devops_version:
        type: string
      external_ip_address:
        type: string
      is_reverse_proxy_enabled:
        type: boolean
      os_name:
        type: string
      os_version:
        type: string
      parallels_desktop_licensed:
        type: boolean
      parallels_desktop_version:
        type: string
      reverse_proxy:
        $ref: '#/definitions/models.SystemReverseProxy'
      system_reserved:
        $ref: '#/definitions/models.SystemUsageItem'
      total:
        $ref: '#/definitions/models.SystemUsageItem'
      total_available:
        $ref: '#/definitions/models.SystemUsageItem'
      total_in_use:
        $ref: '#/definitions/models.SystemUsageItem'
      total_reserved:
        $ref: '#/definitions/models.SystemUsageItem'
    type: object
  models.UninstallToolsRequest:
    properties:
      all:
        type: boolean
      run_as:
        type: string
      tools:
        additionalProperties:
          $ref: '#/definitions/models.UninstallToolsRequestItem'
        type: object
      uninstall_dependencies:
        type: boolean
    type: object
  models.UninstallToolsRequestItem:
    properties:
      flags:
        additionalProperties:
          type: string
        type: object
      uninstall_dependencies:
        type: boolean
    type: object
  models.UnregisterVirtualMachineRequest:
    properties:
      clean_source_uuid:
        type: boolean
      id:
        type: string
      owner:
        type: string
    type: object
  models.UserCreateRequest:
    properties:
      claims:
        items:
          type: string
        type: array
      email:
        type: string
      is_super_user:
        type: boolean
      name:
        type: string
      password:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.ValidateTokenRequest:
    properties:
      token:
        type: string
    type: object
  models.ValidateTokenResponse:
    properties:
      valid:
        type: boolean
    type: object
  models.VirtualMachineCatalogManifestPatch:
    properties:
      connection:
        type: string
      required_claims:
        items:
          type: string
        type: array
      required_roles:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
    type: object
  models.VirtualMachineCloneCommandRequest:
    properties:
      clone_name:
        type: string
    type: object
  models.VirtualMachineCloneCommandResponse:
    properties:
      error:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  models.VirtualMachineConfigRequest:
    properties:
      operations:
        items:
          $ref: '#/definitions/models.VirtualMachineConfigRequestOperation'
        type: array
      owner:
        type: string
    type: object
  models.VirtualMachineConfigRequestOperation:
    properties:
      error: {}
      flags:
        items:
          type: string
        type: array
      group:
        type: string
      operation:
        type: string
      options:
        items:
          $ref: '#/definitions/models.VirtualMachineConfigRequestOperationOption'
        type: array
      owner:
        type: string
      value:
        type: string
    type: object
  models.VirtualMachineConfigRequestOperationOption:
    properties:
      flag:
        type: string
      value:
        type: string
    type: object
  models.VirtualMachineConfigResponse:
    properties:
      operations:
        items:
          $ref: '#/definitions/models.VirtualMachineConfigResponseOperation'
        type: array
    type: object
  models.VirtualMachineConfigResponseOperation:
    properties:
      error:
        type: string
      group:
        type: string
      operation:
        type: string
      status:
        type: string
    type: object
  models.VirtualMachineExecuteCommandRequest:
    properties:
      command:
        type: string
      environment_variables:
        additionalProperties:
          type: string
        type: object
      script:
        $ref: '#/definitions/models.VirtualMachineExecuteCommandScript'
      use_ssh:
        type: boolean
      use_sudo:
        type: boolean
      user:
        type: string
    type: object
  models.VirtualMachineExecuteCommandResponse:
    properties:
      error:
        type: string
      exit_code:
        type: integer
      stderr:
        type: string
      stdout:
        type: string
    type: object
  models.VirtualMachineExecuteCommandScript:
    properties:
      parameters:
        type: string
      path:
        type: string
      remote_path:
        type: string
    type: object
  models.VirtualMachineOperationResponse:
    properties:
      id:
        type: string
      operation:
        type: string
      status:
        type: string
    type: object
  models.VirtualMachineStatusResponse:
    properties:
      id:
        type: string
      ip_configured:
        type: string
      status:
        type: string
    type: object
  models.VirtualMachineUploadRequest:
    properties:
      path:
        type: string
      remote_path:
        type: string
    type: object
  models.VirtualMachineUploadResponse:
    properties:
      error:
        type: string
      path:
        type: string
    type: object
info:
  contact:
    email: carlos.lapao@parallels.com
    name: Parallels Desktop DevOps Support
    url: https://forum.parallels.com/
  description: Parallels Desktop DevOps Service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Parallels Desktop DevOps Service
  version: 0.9.9
paths:
  /health/probe:
    get:
      description: This endpoint returns the API Health Probe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
        "402":
          description: Payment Required
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets the API Health Probe
      tags:
      - Config
  /health/system:
    get:
      description: This endpoint returns the API Health Probe
      parameters:
      - description: Full Health Check
        in: query
        name: full
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ServiceHealthCheck'
      summary: Gets the API System Health
      tags:
      - Config
  /v1/auth/api_keys:
    get:
      description: This endpoint returns all the api keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiKeyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the api keys
      tags:
      - Api Keys
    post:
      description: This endpoint creates an api key
      parameters:
      - description: Body
        in: body
        name: apiKey
        required: true
        schema:
          $ref: '#/definitions/models.ApiKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates an api key
      tags:
      - Api Keys
  /v1/auth/api_keys/{id}:
    delete:
      description: This endpoint deletes an api key
      parameters:
      - description: Api Key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes an api key
      tags:
      - Api Keys
    get:
      description: This endpoint returns an api key by id or name
      parameters:
      - description: Api Key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets an api key by id or name
      tags:
      - Api Keys
  /v1/auth/api_keys/{id}/revoke:
    put:
      description: This endpoint revokes an api key
      parameters:
      - description: Api Key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Revoke an api key
      tags:
      - Api Keys
  /v1/auth/claims:
    get:
      description: This endpoint returns all the claims
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClaimResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the claims
      tags:
      - Claims
    post:
      description: This endpoint creates a claim
      parameters:
      - description: Claim Request
        in: body
        name: claimRequest
        required: true
        schema:
          $ref: '#/definitions/models.ClaimRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ClaimResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a claim
      tags:
      - Claims
  /v1/auth/claims/{id}:
    delete:
      description: This endpoint Deletes a claim
      parameters:
      - description: Claim ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Delete a claim
      tags:
      - Claims
    get:
      description: This endpoint returns a claim
      parameters:
      - description: Claim ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ClaimResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a claim
      tags:
      - Claims
  /v1/auth/roles:
    get:
      description: This endpoint returns all the roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RoleResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the roles
      tags:
      - Roles
    post:
      description: This endpoint returns a role
      parameters:
      - description: Role Request
        in: body
        name: roleRequest
        required: true
        schema:
          $ref: '#/definitions/models.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a role
      tags:
      - Roles
  /v1/auth/roles/{id}:
    delete:
      description: This endpoint deletes a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Delete a role
      tags:
      - Roles
    get:
      description: This endpoint returns a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a role
      tags:
      - Roles
  /v1/auth/token:
    post:
      description: This endpoint generates a token
      parameters:
      - description: Body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      summary: Generates a token
      tags:
      - Authorization
  /v1/auth/token/validate:
    post:
      description: This endpoint validates a token
      parameters:
      - description: Body
        in: body
        name: tokenRequest
        required: true
        schema:
          $ref: '#/definitions/models.ValidateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ValidateTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      summary: Validates a token
      tags:
      - Authorization
  /v1/auth/users:
    get:
      description: This endpoint returns all the users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ApiUser'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the users
      tags:
      - Users
    post:
      description: This endpoint creates a user
      parameters:
      - description: User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ApiUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a user
      tags:
      - Users
  /v1/auth/users/{id}:
    delete:
      description: This endpoint deletes a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes a user
      tags:
      - Users
    get:
      description: This endpoint returns a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a user
      tags:
      - Users
    put:
      description: This endpoint updates a user
      parameters:
      - description: User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.ApiUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Update a user
      tags:
      - Users
  /v1/auth/users/{id}/claims:
    get:
      description: This endpoint returns all the claims for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ClaimResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the claims for a user
      tags:
      - Users
    post:
      description: This endpoint adds a claim to a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Claim Name
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ClaimRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ClaimRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Adds a claim to a user
      tags:
      - Users
  /v1/auth/users/{id}/claims/{claim_id}:
    delete:
      description: This endpoint removes a claim from a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Claim ID
        in: path
        name: claim_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Removes a claim from a user
      tags:
      - Users
  /v1/auth/users/{id}/roles:
    get:
      description: This endpoint returns all the roles for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the roles for a user
      tags:
      - Users
    post:
      description: This endpoint adds a role to a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Name
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.RoleRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Adds a role to a user
      tags:
      - Users
  /v1/auth/users/{id}/roles/{role_id}:
    delete:
      description: This endpoint removes a role from a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Removes a role from a user
      tags:
      - Users
  /v1/catalog:
    get:
      description: This endpoint returns all the remote catalogs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                items:
                  $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
                type: array
              type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the remote catalogs
      tags:
      - Catalogs
  /v1/catalog/{catalogId}:
    delete:
      description: This endpoint deletes a catalog manifest and all its versions
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes a catalog manifest and all its versions
      tags:
      - Catalogs
    get:
      description: This endpoint returns all the remote catalogs
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the remote catalogs
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}:
    delete:
      description: This endpoint deletes a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes a catalog manifest version
      tags:
      - Catalogs
    get:
      description: This endpoint returns a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}:
    delete:
      description: This endpoint deletes a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes a catalog manifest version architecture
      tags:
      - Catalogs
    get:
      description: This endpoint returns a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a catalog manifest version architecture
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/claims:
    delete:
      description: This endpoint removes claims from a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCatalogManifestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Removes claims from a catalog manifest version
      tags:
      - Catalogs
    patch:
      description: This endpoint adds claims to a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCatalogManifestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Updates a catalog
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/download:
    get:
      description: This endpoint downloads a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Downloads a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/revoke:
    patch:
      description: This endpoint UnTaints a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: UnTaints a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/roles:
    delete:
      description: This endpoint removes roles from a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCatalogManifestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Removes roles from a catalog manifest version
      tags:
      - Catalogs
    patch:
      description: This endpoint adds roles to a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCatalogManifestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Adds roles to a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/tags:
    delete:
      description: This endpoint removes tags from a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCatalogManifestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Removes tags from a catalog manifest version
      tags:
      - Catalogs
    patch:
      description: This endpoint adds tags to a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCatalogManifestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Adds tags to a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/taint:
    patch:
      description: This endpoint Taints a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Taints a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/{catalogId}/{version}/{architecture}/untaint:
    patch:
      description: This endpoint UnTaints a catalog manifest version
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      - description: Version
        in: path
        name: version
        required: true
        type: string
      - description: Architecture
        in: path
        name: architecture
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: UnTaints a catalog manifest version
      tags:
      - Catalogs
  /v1/catalog/cache:
    delete:
      description: This endpoint returns all the remote catalog cache if any
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes all catalog cache
      tags:
      - Catalogs
    get:
      description: This endpoint returns all the remote catalog cache if any
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets catalog cache
      tags:
      - Catalogs
  /v1/catalog/cache/{catalogId}:
    delete:
      description: This endpoint returns all the remote catalog cache if any
      parameters:
      - description: Catalog ID
        in: path
        name: catalogId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes catalog cache item
      tags:
      - Catalogs
  /v1/catalog/import:
    put:
      description: This endpoint imports a remote catalog manifest metadata into the
        catalog inventory
      parameters:
      - description: Pull request
        in: body
        name: importRequest
        required: true
        schema:
          $ref: '#/definitions/models.ImportCatalogManifestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ImportCatalogManifestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Imports a remote catalog manifest metadata into the catalog inventory
      tags:
      - Catalogs
  /v1/catalog/import-vm:
    put:
      description: This endpoint imports a virtual machine in pvm or macvm format
        into the catalog inventory generating the metadata for it
      parameters:
      - description: Vm Impoty request
        in: body
        name: importRequest
        required: true
        schema:
          $ref: '#/definitions/models.ImportVmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ImportVmResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Imports a vm into the catalog inventory generating the metadata for
        it
      tags:
      - Catalogs
  /v1/catalog/pull:
    put:
      description: This endpoint pulls a remote catalog manifest
      parameters:
      - description: Pull request
        in: body
        name: pullRequest
        required: true
        schema:
          $ref: '#/definitions/models.PullCatalogManifestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.PullCatalogManifestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Pull a remote catalog manifest
      tags:
      - Catalogs
  /v1/catalog/push:
    post:
      description: This endpoint pushes a catalog manifest to the catalog inventory
      parameters:
      - description: Push request
        in: body
        name: pushRequest
        required: true
        schema:
          $ref: '#/definitions/models.PushCatalogManifestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.CatalogManifest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Pushes a catalog manifest to the catalog inventory
      tags:
      - Catalogs
  /v1/config/hardware:
    get:
      description: This endpoint returns the Hardware Info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SystemUsageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets the Hardware Info
      tags:
      - Config
  /v1/config/tools/install:
    post:
      description: This endpoint installs API requires 3rd party tools
      parameters:
      - description: Install Tools Request
        in: body
        name: installToolsRequest
        required: true
        schema:
          $ref: '#/definitions/models.InstallToolsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InstallToolsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Installs API requires 3rd party tools
      tags:
      - Config
  /v1/config/tools/restart:
    post:
      description: This endpoint restarts the API Service
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Restarts the API Service
      tags:
      - Config
  /v1/config/tools/uninstall:
    post:
      description: This endpoint uninstalls API requires 3rd party tools
      parameters:
      - description: Uninstall Tools Request
        in: body
        name: uninstallToolsRequest
        required: true
        schema:
          $ref: '#/definitions/models.UninstallToolsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InstallToolsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Uninstalls API requires 3rd party tools
      tags:
      - Config
  /v1/machines:
    get:
      description: This endpoint returns all the virtual machines
      parameters:
      - description: X-Filter
        in: header
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the virtual machines
      tags:
      - Machines
    post:
      description: This endpoint creates a virtual machine
      parameters:
      - description: New Machine Request
        in: body
        name: createRequest
        required: true
        schema:
          $ref: '#/definitions/models.CreateVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateVirtualMachineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a virtual machine
      tags:
      - Machines
  /v1/machines/{id}:
    delete:
      description: This endpoint deletes a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes a virtual machine
      tags:
      - Machines
    get:
      description: This endpoint returns a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/clone:
    put:
      description: This endpoint clones a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Clone Request
        in: body
        name: configRequest
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineCloneCommandRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineCloneCommandResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Clones a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/execute:
    put:
      description: This endpoint executes a command on a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Execute Command Request
        in: body
        name: executeRequest
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineExecuteCommandRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineExecuteCommandResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Executes a command on a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/pause:
    get:
      description: This endpoint pauses a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Pauses a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/rename:
    put:
      description: This endpoint Renames a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Rename Request
        in: body
        name: renameRequest
        required: true
        schema:
          $ref: '#/definitions/models.RenameVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Renames a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/reset:
    get:
      description: This endpoint reset a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Reset a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/restart:
    get:
      description: This endpoint restarts a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Restarts a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/resume:
    get:
      description: This endpoint resumes a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Resumes a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/set:
    put:
      description: This endpoint configures a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Set Request
        in: body
        name: configRequest
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Configures a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/start:
    get:
      description: This endpoint starts a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Starts a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/status:
    get:
      description: This endpoint returns the current state of a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get the current state of a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/stop:
    get:
      description: This endpoint stops a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Stops a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/suspend:
    get:
      description: This endpoint suspends a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineOperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Suspends a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/unregister:
    post:
      description: This endpoint unregister a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Unregister Request
        in: body
        name: unregisterRequest
        required: true
        schema:
          $ref: '#/definitions/models.UnregisterVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiCommonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Unregister a virtual machine
      tags:
      - Machines
  /v1/machines/{id}/upload:
    post:
      description: This endpoint executes a command on a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Upload file Command Request
        in: body
        name: executeRequest
        required: true
        schema:
          $ref: '#/definitions/models.VirtualMachineUploadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineUploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Uploads a file to a virtual machine
      tags:
      - Machines
  /v1/machines/register:
    post:
      description: This endpoint registers a virtual machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: string
      - description: Machine Register Request
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/models.RegisterVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Registers a virtual machine
      tags:
      - Machines
  /v1/orchestrator/hosts:
    get:
      description: This endpoint returns all hosts from the orchestrator
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrchestratorHostResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all hosts from the orchestrator
      tags:
      - Orchestrator
    post:
      description: This endpoint register a host in the orchestrator
      parameters:
      - description: Host Request
        in: body
        name: hostRequest
        required: true
        schema:
          $ref: '#/definitions/models.OrchestratorHostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrchestratorHostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Register a Host in the orchestrator
      tags:
      - Orchestrator
    put:
      description: This endpoint updates a host in the orchestrator
      parameters:
      - description: Host Update Request
        in: body
        name: hostRequest
        required: true
        schema:
          $ref: '#/definitions/models.OrchestratorHostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrchestratorHostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Update a Host in the orchestrator
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}:
    delete:
      description: This endpoint unregister a host from the orchestrator
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Unregister a host from the orchestrator
      tags:
      - Orchestrator
    get:
      description: This endpoint returns a host from the orchestrator
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrchestratorHostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a host from the orchestrator
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/disable:
    put:
      description: This endpoint will disable an existing host in the orchestrator
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrchestratorHostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Disable a host in the orchestrator
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/enable:
    put:
      description: This endpoint will enable an existing host in the orchestrator
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrchestratorHostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Enable a host in the orchestrator
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines:
    get:
      description: This endpoint returns orchestrator host virtual machines
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator host virtual machines
      tags:
      - Orchestrator
    post:
      description: This endpoint creates a orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Create Virtual Machine Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateVirtualMachineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}:
    delete:
      description: This endpoint deletes orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes orchestrator host virtual machine
      tags:
      - Orchestrator
    get:
      description: This endpoint returns orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/execute:
    put:
      description: This endpoint executes a command in a orchestrator host virtual
        machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Executes a command in a orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/rename:
    put:
      description: This endpoint renames orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Renames orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/set:
    put:
      description: This endpoint configures orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Configures orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/start:
    put:
      description: This endpoint starts orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Starts orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/status:
    get:
      description: This endpoint returns orchestrator host virtual machine status
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator host virtual machine status
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/stop:
    put:
      description: This endpoint starts orchestrator host virtual machine
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Starts orchestrator host virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/{vmId}/unregister:
    post:
      description: This endpoint unregister a virtual machine in a orchestrator host
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Virtual Machine ID
        in: path
        name: vmId
        required: true
        type: string
      - description: Register Virtual Machine Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UnregisterVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Unregister a virtual machine in a orchestrator host
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/machines/register:
    post:
      description: This endpoint registers a virtual machine in a orchestrator host
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Register Virtual Machine Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Register a virtual machine in a orchestrator host
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/disable:
    put:
      description: This endpoint disables orchestrator host reverse proxy
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Disables orchestrator host reverse proxy
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/enable:
    put:
      description: This endpoint enables orchestrator host reverse proxy
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Enables orchestrator host reverse proxy
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/hosts:
    get:
      description: This endpoint returns orchestrator host reverse proxy hosts
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets orchestrator host reverse proxy hosts
      tags:
      - Orchestrator
    post:
      description: This endpoint creates a orchestrator host reverse proxy host
      parameters:
      - description: Create Host Reverse Proxy Host Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a orchestrator host reverse proxy host
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/hosts/{reverse_proxy_host_id}:
    delete:
      description: This endpoint deletes an orchestrator host reverse proxy host
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Reverse Proxy Host ID
        in: path
        name: reverse_proxy_host_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes an orchestrator host reverse proxy host
      tags:
      - Orchestrator
    get:
      description: This endpoint returns orchestrator host reverse proxy hosts
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets orchestrator host reverse proxy hosts
      tags:
      - Orchestrator
    put:
      description: This endpoint updates an orchestrator host reverse proxy host
      parameters:
      - description: Update Host Reverse Proxy Host Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Updates an orchestrator host reverse proxy host
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/hosts/{reverse_proxy_host_id}/http_routes:
    post:
      description: This endpoint upserts an orchestrator host reverse proxy host http
        route
      parameters:
      - description: Upsert Host Reverse Proxy Host Http Routes Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Upserts an orchestrator host reverse proxy host http route
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/hosts/{reverse_proxy_host_id}/http_routes/{route_id}:
    delete:
      description: This endpoint deletes an orchestrator host reverse proxy host http
        route
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Reverse Proxy Host ID
        in: path
        name: reverse_proxy_host_id
        required: true
        type: string
      - description: Route ID
        in: path
        name: route_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes an orchestrator host reverse proxy host http route
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/hosts/{reverse_proxy_host_id}/tcp_route:
    post:
      description: This endpoint updates an orchestrator host reverse proxy host tcp
        route
      parameters:
      - description: Update Host Reverse Proxy Host tcp Routes Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Update an orchestrator host reverse proxy host tcp route
      tags:
      - Orchestrator
  /v1/orchestrator/hosts/{id}/reverse-proxy/restart:
    put:
      description: This endpoint restarts orchestrator host reverse proxy
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Restarts orchestrator host reverse proxy
      tags:
      - Orchestrator
  /v1/orchestrator/machines:
    get:
      description: This endpoint returns orchestrator Virtual Machines
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator Virtual Machines
      tags:
      - Orchestrator
    post:
      description: This endpoint creates a virtual machine in one of the hosts for
        the orchestrator
      parameters:
      - description: Create Virtual Machine Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateVirtualMachineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateVirtualMachineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a virtual machine in one of the hosts for the orchestrator
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{id}:
    delete:
      description: This endpoint deletes orchestrator virtual machine
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes orchestrator virtual machine
      tags:
      - Orchestrator
    get:
      description: This endpoint returns orchestrator Virtual Machine by its ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator Virtual Machine
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{id}/rename:
    put:
      description: This endpoint renames orchestrator virtual machine
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Renames orchestrator virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{vmId}/execute:
    put:
      description: This endpoint executes a command in a orchestrator virtual machine
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Executes a command in a orchestrator virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{vmId}/set:
    put:
      description: This endpoint configures orchestrator virtual machine
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Configures orchestrator virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{vmId}/start:
    put:
      description: This endpoint starts orchestrator virtual machine
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Starts orchestrator virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{vmId}/status:
    get:
      description: This endpoint returns orchestrator virtual machine status
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ParallelsVM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator virtual machine status
      tags:
      - Orchestrator
  /v1/orchestrator/machines/{vmId}/stop:
    put:
      description: This endpoint sops orchestrator virtual machine
      parameters:
      - description: Virtual Machine ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VirtualMachineConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Stops orchestrator virtual machine
      tags:
      - Orchestrator
  /v1/orchestrator/overview/{id}/resources:
    get:
      description: This endpoint returns orchestrator host resources
      parameters:
      - description: Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HostResourceOverviewResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator host resources
      tags:
      - Orchestrator
  /v1/orchestrator/overview/resources:
    get:
      description: This endpoint returns orchestrator resource overview
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HostResourceOverviewResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get orchestrator resource overview
      tags:
      - Orchestrator
  /v1/parallels_desktop/key:
    get:
      description: This endpoint returns Parallels Desktop active license
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ParallelsDesktopLicense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets Parallels Desktop active license
      tags:
      - Config
  /v1/reverse-proxy:
    get:
      description: This endpoint returns the reverse proxy configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxy'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets reverse proxy configuration
      tags:
      - ReverseProxy
  /v1/reverse-proxy/disable:
    put:
      description: This endpoint will disable the reverse proxy
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Disable the reverse proxy
      tags:
      - ReverseProxy
  /v1/reverse-proxy/enable:
    put:
      description: This endpoint will enable the reverse proxy
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Enable the reverse proxy
      tags:
      - ReverseProxy
  /v1/reverse-proxy/hosts:
    get:
      description: This endpoint returns all the reverse proxy hosts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the reverse proxy hosts
      tags:
      - ReverseProxy
    post:
      description: This endpoint creates a reverse proxy host
      parameters:
      - description: Reverse Host Request
        in: body
        name: reverse_proxy_create_request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a reverse proxy host
      tags:
      - ReverseProxy
  /v1/reverse-proxy/hosts/{id}:
    delete:
      description: This endpoint Deletes a reverse proxy host
      parameters:
      - description: Reverse Proxy Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Delete a a reverse proxy host
      tags:
      - ReverseProxy
    get:
      description: This endpoint returns a reverse proxy host
      parameters:
      - description: Reverse Proxy Host ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the reverse proxy host
      tags:
      - ReverseProxy
    put:
      description: This endpoint creates a reverse proxy host
      parameters:
      - description: Reverse Host Request
        in: body
        name: reverse_proxy_update_request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Updates a reverse proxy host
      tags:
      - ReverseProxy
  /v1/reverse-proxy/hosts/{id}/http_route:
    post:
      description: This endpoint creates or updates a reverse proxy host HTTP route
      parameters:
      - description: Reverse Host Request
        in: body
        name: reverse_proxy_http_route_request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostHttpRouteCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates or updates a reverse proxy host HTTP route
      tags:
      - ReverseProxy
  /v1/reverse-proxy/hosts/{id}/http_routes:
    post:
      description: This endpoint updates a reverse proxy host TCP route
      parameters:
      - description: Reverse Host Request
        in: body
        name: reverse_proxy_tcp_route_request
        required: true
        schema:
          $ref: '#/definitions/models.ReverseProxyHostTcpRouteCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Parallels_prl-devops-service_models.ReverseProxyHost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Updates a reverse proxy host TCP route
      tags:
      - ReverseProxy
  /v1/reverse-proxy/hosts/{id}/http_routes/{http_route_id}:
    delete:
      description: This endpoint Deletes a reverse proxy host HTTP route
      parameters:
      - description: Reverse Proxy Host ID
        in: path
        name: id
        required: true
        type: string
      - description: Reverse Proxy Host HTTP Route ID
        in: path
        name: http_route_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Delete a a reverse proxy host HTTP route
      tags:
      - ReverseProxy
  /v1/reverse-proxy/restart:
    put:
      description: This endpoint will restart the reverse proxy
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Restarts the reverse proxy
      tags:
      - ReverseProxy
  /v1/templates/packer:
    get:
      description: This endpoint returns all the packer templates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PackerTemplateResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets all the packer templates
      tags:
      - Packer Templates
    post:
      description: This endpoint creates a packer template
      parameters:
      - description: Create Packer Template Request
        in: body
        name: createPackerTemplateRequest
        required: true
        schema:
          $ref: '#/definitions/models.CreatePackerTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PackerTemplateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Creates a packer template
      tags:
      - Packer Templates
  /v1/templates/packer/{id}:
    delete:
      description: This endpoint deletes a packer template
      parameters:
      - description: Packer Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Deletes a packer template
      tags:
      - Packer Templates
    get:
      description: This endpoint returns a packer template
      parameters:
      - description: Packer Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PackerTemplateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Gets a packer template
      tags:
      - Packer Templates
    put:
      description: This endpoint updates a packer template
      parameters:
      - description: Update Packer Template Request
        in: body
        name: createPackerTemplateRequest
        required: true
        schema:
          $ref: '#/definitions/models.CreatePackerTemplateRequest'
      - description: Packer Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PackerTemplateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.OAuthErrorResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Updates a packer template
      tags:
      - Packer Templates
securityDefinitions:
  ApiKeyAuth:
    description: Type the api key in the input below.
    in: header
    name: X-Api-Key
    type: apiKey
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
